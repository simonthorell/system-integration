apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: frontend:latest # Use local image
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: frontend-code
              mountPath: /app
            - name: node-modules
              mountPath: /app/node_modules
      volumes:
        - name: frontend-code
          hostPath:
            path: ./frontend
        - name: node-modules
          emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: backend:latest # Use local image
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              value: mysql
            - name: DB_PASSWORD
              value: my-secret-pw
          command: ["java", "-jar", "target/system-integration.jar"]
          volumeMounts:
            - name: backend-code
              mountPath: /app
            - name: target
              mountPath: /app/target
      volumes:
        - name: backend-code
          hostPath:
            path: ./backend
        - name: target
          emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: my-secret-pw
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
